// <auto-generated />
using System;
using DocesSamuel.Repositorio.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

namespace DocesSamuel.Repositorio.Migrations
{
    [DbContext(typeof(DocesSamuelContext))]
    partial class DocesSamuelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            modelBuilder.Entity("DocesSamuel.Dominio.Entidades.Grupo", b =>
                {
                    b.Property<int>("IdGrupo")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("strNmGrupo")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("IdGrupo");

                    b.ToTable("Grupos");
                });

            modelBuilder.Entity("DocesSamuel.Dominio.Entidades.ItemPedido", b =>
                {
                    b.Property<int>("IdItem")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("PedidoId");

                    b.Property<int>("ProdutoId");

                    b.Property<double>("douQuant");

                    b.HasKey("IdItem");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ItemPedidos");
                });

            modelBuilder.Entity("DocesSamuel.Dominio.Entidades.Pedido", b =>
                {
                    b.Property<int>("IdPed")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("UsuarioId");

                    b.Property<DateTime>("dtPedido");

                    b.Property<string>("strObs")
                        .HasMaxLength(100);

                    b.HasKey("IdPed");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("DocesSamuel.Dominio.Entidades.Produto", b =>
                {
                    b.Property<int>("IdProd")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("douPrecoUnit");

                    b.Property<string>("strNmProd")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("strNomeArq")
                        .HasMaxLength(100);

                    b.HasKey("IdProd");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("DocesSamuel.Dominio.Usuario", b =>
                {
                    b.Property<int>("IdUsr")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("booAdmin");

                    b.Property<string>("strEmail")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("strNmUsr")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("strSenha")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("IdUsr");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("DocesSamuel.Dominio.Entidades.ItemPedido", b =>
                {
                    b.HasOne("DocesSamuel.Dominio.Entidades.Pedido", "Pedido")
                        .WithMany("ItemPedidos")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DocesSamuel.Dominio.Entidades.Produto", "Produto")
                        .WithMany("itemPedidos")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DocesSamuel.Dominio.Entidades.Pedido", b =>
                {
                    b.HasOne("DocesSamuel.Dominio.Usuario", "Usuario")
                        .WithMany("Pedidos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
